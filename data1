{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 1,
                        "title": "[LeetCode] Two Sum",
                        "repository": {
                            "nameWithOwner": "unlv-evol/test-pareco",
                            "primaryLanguage": null
                        },
                        "createdAt": "2024-01-11T20:59:44Z",
                        "mergedAt": null,
                        "url": "https://github.com/unlv-evol/test-pareco/pull/1",
                        "state": "OPEN",
                        "author": {
                            "login": "danielogen"
                        },
                        "editor": {
                            "login": "danielogen"
                        },
                        "body": "This PR solves the LeetCode problem: https://leetcode.com/problems/two-sum/description/\r\n\r\nThe implementation is borrowed from ChatGPT: \r\nhttps://chat.openai.com/share/5ed4faed-52c3-45dd-9c6a-1363b3f0dd91",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Your current implementation for the two-sum problem looks efficient, but it doesn't handle the case where no solution is found. The function should return None. See here: https://chat.openai.com/share/f3967d74-3668-4eb4-a547-7bf4ee05d617",
                                                        "author": {
                                                            "login": "danielogen"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4783510",
                                                            "authoredDate": "2024-01-11T20:56:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2021,
                        "title": "#1661: added auto-incrementing identifier in RR",
                        "repository": {
                            "nameWithOwner": "Northeastern-Electric-Racing/FinishLine",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2024-01-29T03:39:17Z",
                        "mergedAt": null,
                        "url": "https://github.com/Northeastern-Electric-Racing/FinishLine/pull/2021",
                        "state": "OPEN",
                        "author": {
                            "login": "callmejim1226"
                        },
                        "editor": {
                            "login": "callmejim1226"
                        },
                        "body": "## Changes\r\n\r\n- Added auto-incrementing integer field in RR scheme as an identifier\r\n-  Updated the RR shared type\r\n- Updated all RR getter endpoints to return RR with its identifier field\r\n- Added SQL code in the new migration file so all old RRs get an identifier assigned in the `dateCreated` order\r\n- Confirmed `yarn prisma:reset` works fine\r\n\r\n## Notes\r\n\r\nWe have to somehow test if this SQL code works for all old RR that has no identifier property. This SQL code does not affect RRs that already have identifier prop as written. In other words, all RR seed data has a correct identifier value (check the first screenshot).\r\n\r\n## Test Cases\r\n\r\n- Case A\r\n- Confirmed all RR getter endpoints return RR with its identifier field\r\n- Case B\r\n- Confirmed RR seed data gets identifier field\r\n\r\n## Screenshots\r\n\r\n### RR seed data gets an identifier field\r\n![image](https://github.com/Northeastern-Electric-Racing/FinishLine/assets/91857946/58681386-0b4c-422e-8535-8c8ae3ef035c)\r\n\r\n### Get a single RR with an identifier\r\n![#1661-RR-get-updated-RR](https://github.com/Northeastern-Electric-Racing/FinishLine/assets/91857946/8a7d77c7-b14d-4a89-bbe3-2181b50ceeeb)\r\n\r\n### Get all RR with an identifier\r\n![#1661-RR-get-all-RRs](https://github.com/Northeastern-Electric-Racing/FinishLine/assets/91857946/bb743fdd-0a2c-4fbc-8691-9cc3dc44a1a3)\r\n\r\n\r\n## To Do\r\n\r\n- [x]  test if the SQL code works for all old RR that has no identifier property\r\n\r\n## Checklist\r\n\r\nIt can be helpful to check the `Checks` and `Files changed` tabs.\r\nPlease review the [contributor guide](https://nerdocs.atlassian.net/wiki/spaces/NER/pages/8060929/Software+Contributor+Guide) and reach out to your Tech Lead if anything is unclear.\r\nPlease request reviewers and ping on slack only after you've gone through this whole checklist.\r\n\r\n- [x] All commits are tagged with the ticket number\r\n- [x] No linting errors / newline at end of file warnings\r\n- [x] All code follows repository-configured prettier formatting\r\n- [x] No merge conflicts\r\n- [x] All checks passing\r\n- [x] Screenshots of UI changes (see Screenshots section)\r\n- [x] Remove any non-applicable sections of this template\r\n- [x] Assign the PR to yourself\r\n- [x] No `yarn.lock` changes (unless dependencies have changed)\r\n- [x] Request reviewers & ping on Slack\r\n- [x] PR is linked to the ticket (fill in the closes line below)\r\n\r\nCloses # (issue #)\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "I think you do need to edit the migration in order to get all the RR to have the correct identifier. I'm not exactly sure how, that's where I got stuck when I tried this ticket. I would ask Peyton since I know he has some experience with tricky SQL migrations",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think everything should be on a new migration due to changes on the schema, not edits to old migrations",
                                                        "author": {
                                                            "login": "walker-sean"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "50c09be",
                                                            "authoredDate": "2024-01-29T03:44:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Now I'm thinking about it, what do we meant by the new migration file?\nThe new migration.sql file in this PR got auto-generated by yarn prisma:migrate command after schema.prisma change.",
                                                        "author": {
                                                            "login": "callmejim1226"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "50c09be",
                                                            "authoredDate": "2024-01-29T03:44:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Oh I got what you meant after facing the error: ERROR: column \"identifier\" of relation \"Reimbursement_Request\" already exists\nI had to just remove this line since I already added \"identifier\" prop in a new migration file.",
                                                        "author": {
                                                            "login": "callmejim1226"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "50c09be",
                                                            "authoredDate": "2024-01-29T03:44:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I got this SQL code from ChatGPT (chat: https://chat.openai.com/share/d0692ab8-4656-44bd-b06e-3c99511ac1fc) after providing the context of our RR model and situation.",
                                                        "author": {
                                                            "login": "callmejim1226"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9c352a2",
                                                            "authoredDate": "2024-02-08T05:17:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "works well, good job! One fix tho, it's ordering RRs from newest to oldest instead of vice versa",
                                                        "author": {
                                                            "login": "RChandler234"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9c352a2",
                                                            "authoredDate": "2024-02-08T05:17:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "",
                                                        "author": {
                                                            "login": "RChandler234"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9c352a2",
                                                            "authoredDate": "2024-02-08T05:17:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "still getting them out of order:",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 287,
                        "title": "[DERCBOT-661] RAG : indexing tools",
                        "repository": {
                            "nameWithOwner": "CreditMutuelArkea/tock",
                            "primaryLanguage": {
                                "name": "Kotlin"
                            }
                        },
                        "createdAt": "2024-01-02T14:08:24Z",
                        "mergedAt": null,
                        "url": "https://github.com/CreditMutuelArkea/tock/pull/287",
                        "state": "OPEN",
                        "author": {
                            "login": "GuirriecP"
                        },
                        "editor": null,
                        "body": "",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "Thanks, some improvements can be done.\n\n  Pre-commit hooks should be applied here also : https://pre-commit.com/hooks.html",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Module name should be more explicit (if someday we want to publish it an pypi) for instance tock-llm-indexing-tools, would be more aligned with the existing tock-py : https://github.com/theopenconversationkit/tock-py/blob/master/setup.py#L26",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "also ignore embeddings.json files to prevent some developper from commiting their API keys\n prefer putting  specific  .gitignore files in the package folder, in llm/orchestrator-server/",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Remove this file it should be named __init__.py if you really want an init file",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can you update it to langchain 0.1.0",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "You should only use the abstraction layer BaseEMSetting not OpenAIEMSetting nor AzureOpenAIEMSetting",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This is already handled by get_em_factory, simply load the configuration as a BaseEMSetting format.",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Use a logger.info here",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It's better to explicitly list all arguments with their type so that you can have a better documentation support :\ndef index_documents(input_csv: string, index_name: string, ....) -> str:\nDocument input types and return types using typing.",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "When formatting logs you should not use f-strings, because arguments are always evaluated before calling the logger, this means that the string rendering occurs even if we are in INFO mode and not DEBUG. Let the logger do the formatting (we call it lazy logging) for you using arguments and this format :\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                logging.debug(f\"Beginning indexation session {session_uuid} at '{formatted_datetime}'\")\n          \n          \n            \n                logging.debug(\"Beginning indexation session %s at '%s'\", session_uuid, formatted_datetime)\n          \n      \n    \n    \n  \n\nGood reference about it : https://medium.com/flowe-ita/logging-should-be-lazy-bc6ac9816906",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "You could put this while in a function called tag_chunks, also this kind of data processing could be easily done using pandas in a more efficient way  like this :\nimport pandas as pd\n\n# Example data: list of dictionaries\ndata = [\n    {\"doc_uuid\": \"A\", \"other_key\": \"value1\"},\n    {\"doc_uuid\": \"B\", \"other_key\": \"value2\"},\n    {\"doc_uuid\": \"A\", \"other_key\": \"value3\"},\n    {\"doc_uuid\": \"B\", \"other_key\": \"value4\"},\n    {\"doc_uuid\": \"C\", \"other_key\": \"value5\"},\n    # Add more dictionaries as needed\n]\n\n# Create DataFrame\ndf = pd.DataFrame(data)\n\n# Group by 'doc_uuid' and generate incremental index\ndf['chunk'] = df.groupby('doc_uuid').cumcount()\n\n# Convert the DataFrame to a list of dictionaries\nflattened_data = df.to_dict('records')\n\nflattened_data\nThis this chatgpt : https://chat.openai.com/share/639aade3-aaca-47ba-9c29-09638e0d428e",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Add typing for the function.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            def index_name_is_valid(index_name):\n          \n          \n            \n            def index_name_is_valid(index_name: str) -> bool:",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "You are loading 2 times the configuration file, if you parse it using the TypeAdapter if the provider is unknown it will automatically through an exception.\nYou should parse it in the main them passe an EMSetting to your indexing function.",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It's better to explicitly list all arguments with their type so that you can have a better documentation support.",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Add parameters types.",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Why is it unverified ?",
                                                        "author": {
                                                            "login": "Benvii"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Upgraded to langchain 0.1.0 (0.1.4 in lock file), added langchain-community ^0.0.16.",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done (changed to tock-llm-indexing-tools)",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "BaseEMSetting cannot be instantiated from concrete json dict, and get_em_factory discriminates based on class type, so this cannot be done.\nMaybe a mixup between BaseEMSetting and EMSetting?",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "As designed (asked by Mohamed) : without the '-v' option, the script prints the indexation session id (this is not a log line).\nCan you confirm?",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "By design: the method is proposed as an importable convenience that does the same, but the script is supposed to be used via its docopt-documented CLI. The goal was not to double the same comments (douvbling maintainance).\nCan you confirm?",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Duly noted, read the article.\nDo you confirm I shall rewrite all logs in the 3 scripts? (perf is not a priority, and this can easily introduce bugs)",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done (use pandas to update metadata).",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "By design: checks in main are meant to be fail-soon CLI args-checks (valid JSON inputed by script user), they are then passed along to the heavy-processing index_documents() method.\nWhat do you think?",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "idem #287 (comment)",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can't seem to remember: removed it.",
                                                        "author": {
                                                            "login": "GuirriecP"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "63969ad",
                                                            "authoredDate": "2024-01-08T08:09:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 4403,
                        "title": "Rewrite dfs_back_edges to be iterative",
                        "repository": {
                            "nameWithOwner": "angr/angr",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2024-01-03T12:27:51Z",
                        "mergedAt": "2024-01-10T15:04:57Z",
                        "url": "https://github.com/angr/angr/pull/4403",
                        "state": "MERGED",
                        "author": {
                            "login": "fmagin"
                        },
                        "editor": null,
                        "body": "Turns out you can just ask ChatGPT4 to do rewriting like this: https://chat.openai.com/share/aa214b1d-ced6-4f5d-ac42-db9074f39755\r\n\r\nThis looks correct enough at a first glance but I didn't look into it more. I'm mostly curious if this is already enough to pass the CI tests. I'm a bit confused how the back edges are used elsewhere, from my quick check of what \"back edge\" means, they are a part of the DFS traversal and not the graph itself?",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 1323,
                        "title": "ThingsBoard Cloud Subscription plans definition. Updated API Limits",
                        "repository": {
                            "nameWithOwner": "thingsboard/thingsboard.github.io",
                            "primaryLanguage": {
                                "name": "Sass"
                            }
                        },
                        "createdAt": "2024-01-23T13:36:51Z",
                        "mergedAt": "2024-02-16T15:10:25Z",
                        "url": "https://github.com/thingsboard/thingsboard.github.io/pull/1323",
                        "state": "MERGED",
                        "author": {
                            "login": "stitenko"
                        },
                        "editor": null,
                        "body": "## PR description\r\n\r\nThe documentation updated for ...\r\n\r\n## Link checker\r\n\r\nThe links will be checked by the build agent automatically once you create or update your PR.\r\n\r\nYou can use the following command to check the broken links locally.\r\n\r\n```bash\r\ndocker run --rm -it --network=host --name=linkchecker ghcr.io/linkchecker/linkchecker --check-extern --no-warnings http://0.0.0.0:4000/\r\n```\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This is a rate limit and not an API / Entity limit",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8a04ffd",
                                                            "authoredDate": "2024-01-24T06:45:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The text style of the new elements is completely different from the text style of the old elements!",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8a04ffd",
                                                            "authoredDate": "2024-01-24T06:45:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "<td>200/sec<br>but no more then 6K/min<br>but no more then 140K/hour</td>\nvs\n<td>100 messages per 1 sec,<br>but less than 3000 messages per 60 sec,<br>but less than 70000 messages per 3600 sec</td>",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8a04ffd",
                                                            "authoredDate": "2024-01-24T06:45:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Use the following description style:\nup to 200 per second, not exceeding 6,000 per minute, and capped at 140,000 per hour.\nReference: https://chat.openai.com/share/e/e98f326f-dff8-472a-8e8b-e6a56b027fe9",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "143be1b",
                                                            "authoredDate": "2024-01-31T13:25:39Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Used the suggested description style for the \"Rate Limits\" section",
                                                        "author": {
                                                            "login": "stitenko"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "143be1b",
                                                            "authoredDate": "2024-01-31T13:25:39Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 228,
                        "title": "feat: add `/securities` route to get all securities to display to the user ",
                        "repository": {
                            "nameWithOwner": "maybe-finance/maybe",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2024-01-25T18:58:16Z",
                        "mergedAt": "2024-02-02T14:50:53Z",
                        "url": "https://github.com/maybe-finance/maybe/pull/228",
                        "state": "MERGED",
                        "author": {
                            "login": "crnsh"
                        },
                        "editor": null,
                        "body": "This is in preparation to solve #131 and the first step of #215.\r\n- Adds a `/securities` endpoint to get all securities (only symbol and exchangeName) from the database.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "A TypeScript repo without semi-colons? Who's in charge here? Lol.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Is this a placeholder or full implementation? Just curious on if you're planning to get all and filter client side or add some query params for searching (similar to institutions). I'm guessing this is setting up for the add investment form?",
                                                        "author": {
                                                            "login": "tmyracle"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah this is for setting up the investment form. I'll have two Listbox elements for picking a stock. One selects the exchange, and then the stocks of that exchange are available in the other Listbox (this happens after selecting / creating an account).\nThat's why I'll need all stocks, so this is the complete implementation. If I need something else I'll create another PR but it seems that this is all I need for the backend part of #131.",
                                                        "author": {
                                                            "login": "crnsh"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can we get away with only one Listbox? I wonder how many people know the exchange vs just the ticker or company name. I'm imagining a single listbox and each result displays the relevant info needed to select the right security (name, ticker, exchange). Would be great to be able to search by ticker or name so I can just type Apple or Samsara and get the result I'm looking for.",
                                                        "author": {
                                                            "login": "tmyracle"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah that's actually a better idea. Search by symbol and then disambiguate with exchange.\nEven with this approach I'll need all the stocks though",
                                                        "author": {
                                                            "login": "crnsh"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sending all of the 11k securities (and more in the future) to the client is going to have negative performance implications. I'd check the implementation of institution router and institution service for how server-side search is implemented elsewhere in the app. There should be an initial batch sent to the client (current standard is 50 results, see the enum PageSize in account-types.ts) and the search (debounced) should return the results that match the query using postgres full-text search.",
                                                        "author": {
                                                            "login": "tmyracle"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 7117,
                        "title": "Add: Handle telnet links with Mudlet",
                        "repository": {
                            "nameWithOwner": "Mudlet/Mudlet",
                            "primaryLanguage": {
                                "name": "C++"
                            }
                        },
                        "createdAt": "2024-01-30T18:06:27Z",
                        "mergedAt": null,
                        "url": "https://github.com/Mudlet/Mudlet/pull/7117",
                        "state": "OPEN",
                        "author": {
                            "login": "guhitb"
                        },
                        "editor": {
                            "login": "vadi2"
                        },
                        "body": "#### Brief overview of PR changes/additions\r\n- Updated command line arguments to accept any URI or file path (first positional argument)\r\n- Made `MudletInstanceHandler` packages generic so any URI can be passed to another Mudlet Instance.\r\n- Updated mudlet.desktop, registry keys, and Plist (see https://github.com/Mudlet/installers/pull/115) to handle opening telnet links on each operating system.\r\n- Reused telnet ui components and profile selection logic from https://github.com/Mudlet/Mudlet/pull/3131\r\n#### Motivation for adding to Mudlet\r\nfixes https://github.com/Mudlet/Mudlet/issues/689\r\n/claim #689\r\n#### Other info (issues closed, discussion etc)\r\nI'm having trouble testing the linux telnet file association on my machine. I think I have something misconfigured that's not part of the Mudlet repo. I placed `MimeType=x-scheme-handler/telnet;application/zip;` in `mudlet.desktop` and ran `xdg-mime default mudlet.desktop x-scheme-handler/telnet` to set default.\r\n\r\nTesting: open http://www.durismud.com and click on on the `Play now` link.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "The link handling didn't work for me on macOS, but that might be because the other PR registering URI's isn't merged yet.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Could you add qsl() around string literals here and in other places please?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "What does this do?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Do you think this could be a ranged for instead? Better to avoid while loops if possible.",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Long due, thank you!",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "With Qt's https://doc.qt.io/qt-6/implicit-sharing.html constants don't matter as much btw, but this is okay too!",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm, grammar?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Try lregister for macOS: https://chat.openai.com/share/ca778a07-0203-4535-88ac-2c85e85cf384",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Could macOS get a check too?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It's unused, I'll will remove it",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can change it to something like for (int i = mQueuedUris.length() - 1; i >= 0; i--) to avoid while, but I don't think a ranged for will work since the loop needs to remove items from the list during the loop.",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sure!",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Sorry if this seems a bit nit-picky - I'm just trying to polish it up a bit.\nThanks for working on this as it has been something that we wanted doing for a long time. \ud83d\ude0c\nOne further suggestion would have though is that: can you ensure you have left a blank line between successive methods /functions in the source code.\nHTH",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "QObject is a bit of a special case I think as it is the base class for many, if not all other Qt classes - so it does make sense to have it before the other class headers (though they probably #include it them selves anyhow)... thoughts @vadi2 ? \ud83e\udd37\u200d\u2642\ufe0f",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "That is a bit of a dodgy \"bash\"-ism (I think) - ~ as the WHOLE of the first directory specifier does indeed mean the \"user's\" home directory in the bash (and some other) shells - however ~someotherUser/  means the home directory of someOtherUser which is not how the code afterwards will handle it - I think you have to be more discerning than just using file.startsWith(\"~\") here - you may have to check for a directory separator immediately afterwards to be sure...",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Careful - I do not think you want to hit this line if you have already unlocked it before by carrying out one of the blocks of code inside the ifs otherwise you could get nasal daemons - the Qt documentation for this method notes that it:\n\nUnlocks the mutex. Attempting to unlock a mutex in a different thread to the one that locked it results in an error. Unlocking a mutex that is not locked results in undefined behavior.",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\ud83d\udc4d",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, but it does shut up a compilation warning - which is useful as it means one can focus on the compilation errors... \ud83d\ude00",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Please check the spacing still lines up nicely for the \"Package path or telnet URI\" (and that it fits within 80 columns IIRC)... \ud83e\udd1e",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Doesn't this also need to include URLS with the mudlet scheme type as well?",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I am not seeing this used anywhere in this PR - is it needed?",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This should work for Q_OS_FREEBSD also. https://man.freebsd.org/cgi/man.cgi?query=xdg-mime&apropos=0&sektion=1&manpath=FreeBSD+13.2-RELEASE+and+Ports&arch=default&format=html\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            #if defined(Q_OS_LINUX)\n          \n          \n            \n            #if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD)",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "These two blocks of code are mutual exclusive so they should be combined - also as I reported above the latter should work for FreeBSD so it can be combined with the Linux one:\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            #endif\n          \n          \n            \n            #if defined(Q_OS_LINUX)\n          \n          \n            \n            #elif defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD)",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\ud83e\udd2e - for complex classes I suppose the default/empty initialisation with {} does look attractive but for plain old data types like this I honestly think this is better:\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                int profilesFound{};\n          \n          \n            \n                int profilesFound = 0;",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe?\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                for (auto& host : hostList) {\n          \n          \n            \n                for (const auto& host : hostList) {",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "We are not using that form of providing information to the translation team (see #5522) - instead try:\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                        mpConnectionDialog->showInformationMessage(tr(\"%n matching profiles found for %1, which would you like to open?\",\n          \n          \n            \n                                                                      \"this message is shown when Mudlet is opened from a telnet:// link on a webpage, and more than one profile matches the game server/port - so \"\n          \n          \n            \n                                                                      \"the user needs to pick which of the available profiles they'd like to play with\",\n          \n          \n            \n                                                                      profilesFound)\n          \n          \n            \n                                                                           .arg(url.host()));\n          \n          \n            \n                        /*: This message is shown when Mudlet is opened from a telnet:// link on a webpage, and more than one profile matches the game server/port - so \n          \n          \n            \n                            the user needs to pick which of the available profiles they'd like to play with.*/\n          \n          \n            \n                        mpConnectionDialog->showInformationMessage(tr(\"%n matching profiles found for %1, which would you like to open?\",\n          \n          \n            \n                                                                      \"\",\n          \n          \n            \n                                                                      profilesFound)\n          \n          \n            \n                                                                           .arg(url.host()));",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Please move it up a bit so that it is in the correct alphabetical sort position (after line 210)...",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "A suggestion to try and avoid repeating the exact \"your default client\" phrase. Also to explain what it would be the default for! \ud83d\ude00\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                  <string>Mudlet is not currently set as your default client. Would you like to make it your default client?</string>\n          \n          \n            \n                  <string>Mudlet is not currently set as the default client for handling <tt>telnet://</tt> URLs. Would you like to make it your default?</string>\n          \n      \n    \n    \n  \n\nYou might need to tweak the <tt>...</tt> - I am trying to get it displayed (almost) like: telnet: appears here (but without any shading).",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It's unused, I'll remove it",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thanks for noticing this! I placed it outside the loop to avoid checking if(i==0) inside the loop, but it seems like that's the correct way to do it.",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It does, I'll update listUrisWithScheme to check a QStringList of allowed schemes.",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Testing has revealed a problem on Linux \ud83d\ude05 the temporary location the AppImage gets extracted and run from will always change. Do you think this is solvable? We're looking at migrating to flatpak at the same time, so it's not worth too much effort to make it work for AppImages.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "macOS testing always says \"checking default:  false\". Have you got access to a mac? If no I can do some testing for you.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 259,
                        "title": "Updated to include webhook subscription",
                        "repository": {
                            "nameWithOwner": "Altinn/altinn-broker",
                            "primaryLanguage": {
                                "name": "C#"
                            }
                        },
                        "createdAt": "2024-01-08T10:32:13Z",
                        "mergedAt": "2024-01-08T13:55:17Z",
                        "url": "https://github.com/Altinn/altinn-broker/pull/259",
                        "state": "MERGED",
                        "author": {
                            "login": "tomshag"
                        },
                        "editor": null,
                        "body": "Updated Webhook for malware scanning to include handling of subscription.\r\n\r\n## Description\r\nThe existing webhook functionality only handled the actual update of file status based on malware scan result.\r\nThis update will handle subscription requests so that Azure can actually connect to the webhook.\r\n\r\n## Related Issue(s)\r\n- #220\r\n\r\n## Verification\r\n- [x] **Your** code builds clean without any errors or warnings\r\n- [x] Manual testing done (required)\r\n- [x] Relevant automated test added (if you find this hard, leave it and we'll help out)\r\n- [x] All tests run green\r\n\r\n## Documentation\r\n- [x] User documentation is updated with a separate linked PR in [altinn-studio-docs.](https://github.com/Altinn/altinn-studio-docs) (if applicable)\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Jeg tror denne kan skrives som:\nstring jsonBody = File.ReadAllText(\"Data/WebHookSubscriptionValidationTest.json\");\nMen WebHookSubscriptionValidationTest.json m\u00e5 settes til \u00e5 v\u00e6re en Content-ressurs med \"Copy if newer\" (eller always).",
                                                        "author": {
                                                            "login": "Ceredron"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b294083",
                                                            "authoredDate": "2024-01-08T10:27:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ref:\nhttps://chat.openai.com/share/b7853f70-84b8-477b-9879-a93a51215f81",
                                                        "author": {
                                                            "login": "Ceredron"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b294083",
                                                            "authoredDate": "2024-01-08T10:27:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Nyeste commit skal ordne det.\nBasert p\u00e5 det jeg husker fra Visual Studio er det best \u00e5 alltid bruke CopyIfNewer; dersom du alltid kopierer vil dette kunne kreve at du gj\u00f8r bygg av prosjektet og dermed alle avhengige prosjekter hver gang du gj\u00f8r bygg av solution selv om ingenting er endret av kode eller fil.",
                                                        "author": {
                                                            "login": "tomshag"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b294083",
                                                            "authoredDate": "2024-01-08T10:27:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 338,
                        "title": "[Service] NIT followups to `AddService` in #316",
                        "repository": {
                            "nameWithOwner": "pokt-network/poktroll",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2024-01-19T16:29:19Z",
                        "mergedAt": "2024-01-19T21:41:23Z",
                        "url": "https://github.com/pokt-network/poktroll/pull/338",
                        "state": "MERGED",
                        "author": {
                            "login": "Olshansk"
                        },
                        "editor": null,
                        "body": "## Summary\r\n\r\nNIT followups to #316 added in a separate PR to avoid blocking the base PR.\r\n\r\n## Type of change\r\n\r\nSelect one or more:\r\n\r\n- [ ] New feature, functionality or library\r\n- [ ] Bug fix\r\n- [x] Code health or cleanup\r\n- [ ] Documentation\r\n- [ ] Other (specify)\r\n\r\n## Testing\r\n\r\n- [ ] **Run all unit tests**: `make go_develop_and_test`\r\n- [ ] **Run E2E tests locally**: `make test_e2e`\r\n- [ ] **Run E2E tests on DevNet**: Add the `devnet-test-e2e` label to the PR. This is VERY expensive, only do it after all the reviews are complete.\r\n\r\n## Sanity Checklist\r\n\r\n- [ ] I have tested my changes using the available tooling\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, updated documentation and left TODOs throughout the codebase\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Left a few nits on imports but gunna approve please fix then merge <3",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "NIT: These should be in the second block",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "NIT: Move this back to second block.",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Do you have any idea why this doesn't format it correctly?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "https://github.com/incu6us/goimports-reviser\nhttps://github.com/golang/vscode-go/wiki/features#format-and-organize-imports\nhttps://github.com/golang/vscode-go/wiki/advanced#formatting-code-and-organizing-imports\n\n  \n    \n      poktroll/.golangci.yml\n    \n    \n         Line 30\n      in\n      943669e\n    \n  \n  \n    \n\n        \n          \n           gci: \n        \n    \n  \n\n\nThese links should help, I don't know exactly as I don't use vscode - but the last code reference to my linting PR should help as a reference on the 2nd link.",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "goimports != goimports-reviser you want a final group which is prefixed with our repo name. Pretty sure there is a goimports-reviser plugin maybe for vscode but whatever way you find to make it work - document it somewhere so we can make a configs section",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "https://chat.openai.com/share/d2590505-31e2-4e34-be93-8e4fabf8d872 @Olshansk this should do it ;)",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "incu6us/goimports-reviser#147 \ud83e\udd37",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 26098,
                        "title": "Parse LaTeX matrices and literal complex numbers",
                        "repository": {
                            "nameWithOwner": "sympy/sympy",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2024-01-19T13:01:40Z",
                        "mergedAt": null,
                        "url": "https://github.com/sympy/sympy/pull/26098",
                        "state": "OPEN",
                        "author": {
                            "login": "8vasu"
                        },
                        "editor": {
                            "login": "8vasu"
                        },
                        "body": "Fixes #14007 \r\nAddresses https://github.com/sympy/sympy/issues/25676 and https://github.com/sympy/sympy/issues/25366\r\n\r\nI have written this with the goal of using a purely SymPy-based backend (or SymPy as a part of SageMath) in [symtex.el](https://github.com/ultronozm/symtex.el) and [compuTeX](https://github.com/8vasu/compuTeX). I wish to unify the typesetting and computation aspects of working with matrix groups in my GNU Emacs/AUCTeX-based workflow. \r\n\r\nEdit: I do not mean to rush anyone, but the reason for this PR is that the `latex2sympy2` that we are currently using in our projects depends on ANTLR 4.7, which imports `typing.io`. We keep getting  warnings that `typing.io` is deprecated and that it will be completely removed in Python 3.12. Currently I am using the default Python 3.11 in Debian, but that might change in an OS update/upgrade in the near future. We have found a parsing solution using GNU Emacs Calc, but we depend on SymPy's `parse_expr` anyway. Matrices are a must for us, and I am looking for a clean solution that just uses `parse_latex`.\r\n\r\nEdit: This PR is being split into 2 parts. Currently this only has content for the Lark parser. The following message remains unchanged, and still mentions ANTLR, which is to be ignored.\r\n\r\nEdit: added `\\prime` and `\\ast` as new ways of performing matrix transpose and matrix self-adjoint.\r\n\r\n## Overview of features added or modified:\r\n\r\n1. Matrix parsing is added to both the ANTLR-based and the\r\nLark-based parsers.\r\n2. Literal complex numbers are introduced via the LaTeX macro\r\n`\\sympyi` in order to facilitate working with matrices with complex\r\nnumber entries.\r\n3. Since the single quote (prime) symbol is sometimes used to denote\r\nmatrix transpose, that is introduced, and as a side-effect, primed\r\nsymbols are added to the Lark parser, and the behavior of primes\r\non symbols in ANTLR and Lark are made consistent and completely\r\nfaithful to the input. For example, the input `\"a''_{b'''}''''\"`\r\ngenerates `sympy.Symbol(\"a''_{b'''}''''\")`. Before this commit, the\r\nANTLR-based parser would generate `sympy.Symbol(\"a_{b'}\")` from the\r\ninput `\"a_b'\"`; LaTeX compilers interpret this differently: the\r\nprime in `\"a_b'\"` is rendered on the `\"a\"` as opposed to the `\"b\"`. This\r\ncommit follows the convention followed by LaTeX compilers.\r\n\r\n## List of features added:\r\n\r\n1. Imaginary unit: `\\sympyi`\r\n2. Matrix parsing (`array` and AMS-LaTeX `matrix`, `pmatrix`, `bmatrix`)\r\nand detailed error handling\r\n3. Determinant parsing (`\\det`, `vmatrix`, `|array matrix|`,\r\n`|AMS-LaTeX matrix|`)\r\n4. Transpose via superscripts `^T`, `^{T}`, `^{'}`, `'`. Applied multiple\r\ntimes via `''`, `'''`, ..., `^{''}`, `^{'''}`, ...\r\n5. Conjugate transpose via superscripts `^H`, `^{H}`, `^{*}`. Applied\r\nmultiple times via `^{**}`, `^{***}`, ...\r\n6. Matrix Trace: `\\sympytr`\r\n7. Matrix adjugate: `\\sympyadj`\r\n8. The above matrix functionality works on all matrix expressions\r\nand not just individual literal matrices; for example, `\\det` can\r\nbe applied to the sum of 2 LaTeX matrices.\r\n9. Large number of new tests for all new functionality.\r\n\r\n## List of features modified:\r\n\r\n1. Symbols (one letter, greek, multi-letter, subscripted) can have\r\nprimes (single quotes) on them in the Lark grammar.\r\n2. Primes on output symbols and functions are now completely\r\nfaithful to the input strings (see added tests).\r\n3. In the Lark grammar, integral, derivative, and limit\r\nexpressions have been moved from `_expression_mul` to `_expression_func`\r\nso that, for instance, integrals can be multiplied with each other.\r\n4. In the Lark grammar, the rule `adjacent_expressions` has been\r\nmodified so that `\"fraction _expression\"` is now\r\n`\"fraction _expression_mul\"`. This is done to eliminate the incorrect\r\nalternatives in the ambiguous interpretations of `\\frac{a}{b} x+y`,\r\n`\\frac{a}{b} + \\frac{x}{y}`, `\\frac{a}{b} - \\frac{x}{y}`, etc.\r\n5. The Lark grammar now understands `\"+ expression\"` as just\r\n`\"expression\"`.\r\n6. Some tests have been modified to reflect change in behavior.\r\n\r\n    Relevant issue: https://github.com/sympy/sympy/issues/14007\r\n\r\n#### Release Notes\r\n\r\n<!-- Write the release notes for this release below between the BEGIN and END\r\nstatements. The basic format is a bulleted list with the name of the subpackage\r\nand the release note for this PR. For example:\r\n\r\n* solvers\r\n  * Added a new solver for logarithmic equations.\r\n\r\n* functions\r\n  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.\r\n\r\n* physics.units\r\n  * Corrected a semantical error in the conversion between volt and statvolt which\r\n    reported the volt as being larger than the statvolt.\r\n\r\nor if no release note(s) should be included use:\r\n\r\nNO ENTRY\r\n\r\nSee https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more\r\ninformation on how to write release notes. The bot will check your release\r\nnotes automatically to see if they are formatted correctly. -->\r\n\r\n<!-- BEGIN RELEASE NOTES -->\r\n* parsing\r\n  * Introduced matrix and literal complex number parsing.\r\n\r\n<!-- END RELEASE NOTES -->\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "What is this file?",
                                                        "author": {
                                                            "login": "asmeurer"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "That was auto generated by something. I think it is a graphical tree-like representation of one of the parsers. I will remove it before the final merge.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This sppf.png file is generated by Lark when using debug mode. It is meant to facilitate debugging of the grammar.\nThat being said, it doesn't belong in the repo and should indeed be removed.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This diff probably shouldn't be there.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think this BEGIN_A and BEGIN_B (and similarly, END_A and END_B) is a good naming scheme. Can we think of an alternative, perhaps more descriptive name?",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This shouldn't be here like this, and it shouldn't be a naked import. It should be inside the if lark clause. If lark is installed, then that evaluates to True and we can freely import from Lark. Otherwise, we need to define dummy classes for all the things we imported so that the code still works syntactically.\nThe TL;DR is that you need to move this inside the if lark clause, and then define a dummy Tree class in the else part of that clause.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe a couple of comments indicating what it means if len(tokens) is 4, or len(tokens) is 5 here would be nice to have.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "handle_division doesn't need to be an external function like this. It can be a private helper function of the Transformer class. The Transformer class already has an example of a function like this:  _extract_differential_symbol.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think this belongs here. I'm assuming that this was a copy-paste error.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The commented line should not be there, but I omitted \\\\\\\\ since that is the row separator for matrices. I will remove the commented line.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Those are dummies. I am open to suggestions.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Working on this.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I will remove it now.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think that we should turn off debug in production here.\nsppf.png only conditionally generates when you have some stuff like dot installed in environment,\nand maybe that's why we are getting different results (and extremely slow one for you)",
                                                        "author": {
                                                            "login": "sylee957"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 9209,
                        "title": "Add debugging to user settings page",
                        "repository": {
                            "nameWithOwner": "PrairieLearn/PrairieLearn",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2024-01-04T14:39:45Z",
                        "mergedAt": null,
                        "url": "https://github.com/PrairieLearn/PrairieLearn/pull/9209",
                        "state": "CLOSED",
                        "author": {
                            "login": "trombonekenny"
                        },
                        "editor": null,
                        "body": "It would be helpful to have an endpoint in PL that showed what data we received from the authentication provider. This wouldn't be an everyday requirement, but might help us quickly troubleshoot SSO setup with institution admins.\r\n\r\nThe User Settings page seemed like a reasonable place to display some additional authn information. This PR adds a \"?debug\" query flag to the page to enable embedding more information. There is a toggle for this mode at the bottom of the page -- if we want this functionality to be more hidden, we can remove the visible link to debug mode.\r\n\r\nRight now it only shows LTI 1.3 authentication data from the session. That still needs to be saved there; either in this PR or a different one.",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 3,
                        "title": "Type call function data and response",
                        "repository": {
                            "nameWithOwner": "davestewart/extension-bus",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2024-01-16T13:40:34Z",
                        "mergedAt": null,
                        "url": "https://github.com/davestewart/extension-bus/pull/3",
                        "state": "CLOSED",
                        "author": {
                            "login": "davestewart"
                        },
                        "editor": {
                            "login": "davestewart"
                        },
                        "body": "This PR types the `call()` function `data` and `response`:\r\n\r\n```ts\r\n// background\r\nimport { makeBus } from '../src'\r\n\r\nimport Tab = chrome.tabs.Tab\r\n\r\nconst bus = makeBus('content', {\r\n  handlers: {\r\n    tabs: {\r\n      get ({ id }): Promise<Tab> {\r\n        return chrome.tabs.get(id)\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n```ts\r\n// some other process\r\n\r\n// existing bus\r\nbus.call<Tab, { id: number }>('tabs/get', { id: 1 }).then(tab => {\r\n  if (tab) {\r\n    console.log(tab.url)\r\n  }\r\n})\r\n```\r\n\r\nThis PR doesn't intend to provide any type safety between the handlers and the call, but allows a user to type the call parameters / return itself.\r\n\r\n@oliverdunk - does this answer your request?",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2272,
                        "title": "Keep updates and messages in outbox until client is connected",
                        "repository": {
                            "nameWithOwner": "zauberzeug/nicegui",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2024-01-01T20:21:16Z",
                        "mergedAt": "2024-01-05T14:13:56Z",
                        "url": "https://github.com/zauberzeug/nicegui/pull/2272",
                        "state": "MERGED",
                        "author": {
                            "login": "falkoschindler"
                        },
                        "editor": {
                            "login": "falkoschindler"
                        },
                        "body": "This PR is trying to delay updates and messages in case the corresponding client is not yet connected. This will solve problems like this:\r\n\r\n```py\r\n@ui.page('/')\r\ndef page():\r\n    label = ui.label('Hello world!')\r\n\r\n    async def update():\r\n        label.text = 'Hello again!'  # problem 1\r\n        with label:\r\n            ui.run_javascript('alert(\"Hello from JavaScript!\")')  # problem 2\r\n    background_tasks.create(update())\r\n```\r\n\r\nBecause element updates and other messages are kept in separate queues, there are basically two distinct problems. Messages are already solved, updates are still work in progress.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "I think it would be better to have one loop for each client. Otherwise a blocking client.outbox.send() from one client will affect all the others. Even though a sio.emit() does not wait for a response object from the other side, it still can take time. See my inquiry with ChatGPT: https://chat.openai.com/share/266efdfa-5002-4670-abc5-e9941e437cf0",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Wonderful \ud83e\udd42",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 29,
                        "title": "ODY-334  Iput\u306b\u5358\u4f4d\u3092\u3064\u3051\u308b\u3001ODY-335  \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e\u4fee\u6b63",
                        "repository": {
                            "nameWithOwner": "daydule/odyssey-frontend",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2024-01-27T08:31:21Z",
                        "mergedAt": "2024-02-10T04:40:05Z",
                        "url": "https://github.com/daydule/odyssey-frontend/pull/29",
                        "state": "MERGED",
                        "author": {
                            "login": "Mellbrother"
                        },
                        "editor": {
                            "login": "tom-takeru"
                        },
                        "body": "# \u4e8b\u524d\u78ba\u8a8d(\u5171\u901a)\r\n\r\n- [x] PR \u524d\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u305f\u304b\r\n- [x] \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc/ESLint \u30a8\u30e9\u30fc\u306f\u8d77\u304d\u3066\u3044\u306a\u3044\u304b\r\n- [x] [\u958b\u767a\u30eb\u30fc\u30eb](https://daydule.atlassian.net/wiki/spaces/DAYDULE/pages/9765029)\u3092\u5b88\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u5358\u4f53\u30c6\u30b9\u30c8\u304c\u5168\u3066 OK \u306b\u306a\u3063\u3066\u3044\u308b\u304b\uff08\u73fe\u72b6\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3067\u304d\u3066\u3044\u306a\u3044\u305f\u3081\uff09\r\n- [x] \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u304b\r\n- [x] \u6700\u65b0\u306e`develop`\u30d6\u30e9\u30f3\u30c1\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u304b\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u512a\u5148\u5ea6\uff08\u3069\u308c\u304b\u4e00\u3064\uff09\r\n\r\n- [ ] \u3059\u3050\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] 3 \u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] 7 \u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u306e\u5ea6\u5408\u3044\r\n\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30ef\u30fc\u306b\u3088\u308b\u52d5\u4f5c\u78ba\u8a8d\r\n\r\n- [x] @tom-takeru \r\n- [ ] @atoook \r\n- [ ] @kzk27 \r\n\r\n# \u3084\u3063\u305f\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n- input\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u5358\u4f4d\u8ffd\u52a0\r\n- \u30d5\u30c3\u30bf\u30fc\u8ffd\u52a0\r\n- \u30a2\u30d7\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f4d\u7f6e\u5909\u66f4\r\n\r\n# \u3084\u3089\u306a\u3044\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3051\u3069\u3084\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3051\u308b\u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u305d\u306e\u4ed6<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u4e0a\u8a18\u306e\u9805\u76ee\u4ee5\u5916\u306b\u4f1d\u3048\u308b\u3079\u304d\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u7de8\u96c6\u30dc\u30bf\u30f3\u62bc\u3057\u305f\u6642\u306b\u30ab\u30fc\u30bd\u30eb\u304c\u5f53\u305f\u308b\u3088\u3046\u306b\u51e6\u7406\u8ffd\u52a0",
                                                        "author": {
                                                            "login": "Mellbrother"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "979b773",
                                                            "authoredDate": "2024-01-27T08:28:17Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "input\u4ee5\u5916\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u3068\u304d\u306b\u7de8\u96c6\u30e2\u30fc\u30c9\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u3001\u5358\u4f4d\u304c\u633f\u5165\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u51e6\u7406\ncovertValueToDisplayText\u3067\u7de8\u96c6\u30e2\u30fc\u30c9\u306e\u5834\u5408\u3082\u5358\u4f4d\u304c\u3064\u304f\u3088\u3046\u306b\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001\u51e6\u7406\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u3068\u3001\u3042\u307e\u308a\u5165\u529b\u6642\u306b\u5358\u4f4d\u304c\u306a\u304f\u3066\u3082\u56f0\u3089\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u6848\u3092\u63a1\u7528\u3057\u3066\u3044\u308b",
                                                        "author": {
                                                            "login": "Mellbrother"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "979b773",
                                                            "authoredDate": "2024-01-27T08:28:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "\u30b3\u30e1\u30f3\u30c8\u3057\u305f\uff01\n\u78ba\u8a8d\u304a\u9858\u3044\ud83d\ude4f",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u305d\u3046\u3044\u3048\u3070\u30d5\u30c3\u30bf\u30fc\u5165\u308c\u308b\u306e\u3059\u3063\u304b\u308a\u5fd8\u308c\u3066\u305f\u306d\ud83d\ude05\u3000\n\u3042\u308a\u304c\u3068\u3046\ud83d\udc4d\n\u30e1\u30a4\u30f3\u753b\u9762\u306e\u65b9\u304c\u3001\u30d5\u30c3\u30bf\u30fc\u306e\u9ad8\u3055\u306e\u5206\u3060\u3051\u7e26\u30b9\u30af\u30ed\u30fc\u30eb\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3061\u3083\u3063\u3066\u308b\u307f\u305f\u3044\u3060\u304b\u3089\u3001\u305d\u306e\u5206\u3060\u3051\u30e1\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u9ad8\u3055\u3092\u524a\u3063\u3066\u3082\u3089\u3044\u305f\u3044\ud83d\ude4f",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "979b773",
                                                            "authoredDate": "2024-01-27T08:28:17Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "MainCardInput.tsx\u306e\u4e2d\u3067 convertValueToDisplayText\u3092\u5b9a\u7fa9\u3059\u308b\u306a\u3089\n  const formattedValue = value.toLocaleString();\n  const displayValue = unitPosition === 'left' ? `${unit}${formattedValue}` : `${formattedValue}${unit}`;\n\u3063\u3066\u3057\u3066\n          <input\n            disabled={true}\n            className='max-w-[70%] text-right outline-none placeholder:text-gray-700'\n            onChange={onChange}\n            value={displayValue || 0}\n            placeholder={value ? String(value) : '\u5165\u529b\u5024'}\n            id={label}\n            type='tel'\n          />\n\u3063\u3066\u3057\u3061\u3083\u3063\u3066\u826f\u3044\u6c17\u304c\u3059\u308b\uff01\n\u305f\u3060\u3001\u5c06\u6765\u7684\u306bMoneyResult\u3067\u306e\u8868\u8a18\u306b\u3082\u4f7f\u3048\u305d\u3046\u3060\u304b\u3089\u3001\u5f15\u6570\u306f\u5909\u3048\u305a\u306b\u305d\u306e\u307e\u307e\u5916\u51fa\u3057\u306e\u65b9\u304c\u826f\u3044\u304b\u3082\u3068\u601d\u3063\u3066\u304d\u305f\uff01\nsrc/utils/formatting.ts\u307f\u305f\u3044\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u305d\u3053\u306b\u3053\u306e\u95a2\u6570\u3092\u914d\u7f6e\u3059\u308b\uff1f",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "979b773",
                                                            "authoredDate": "2024-01-27T08:28:17Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "src/utils/formatting.ts\u3068\u3059\u308b\u3084\u308a\u65b9\u306b\u95a2\u3059\u308b\u53c2\u8003\u60c5\u5831\nhttps://chat.openai.com/share/a9452ad4-6b33-40a9-9e73-6d85fd5bd8fc",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "979b773",
                                                            "authoredDate": "2024-01-27T08:28:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u5916\u3060\u3057\u3057\u305f",
                                                        "author": {
                                                            "login": "Mellbrother"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "979b773",
                                                            "authoredDate": "2024-01-27T08:28:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u4fee\u6b63\u3057\u305f",
                                                        "author": {
                                                            "login": "Mellbrother"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "979b773",
                                                            "authoredDate": "2024-01-27T08:28:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM! \ud83c\udf3e",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 184,
                        "title": "Feat : Create checkbox component",
                        "repository": {
                            "nameWithOwner": "nishiki-tech/nishiki-frontend",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2024-01-13T07:17:47Z",
                        "mergedAt": "2024-01-17T20:39:01Z",
                        "url": "https://github.com/nishiki-tech/nishiki-frontend/pull/184",
                        "state": "MERGED",
                        "author": {
                            "login": "kanta1207"
                        },
                        "editor": {
                            "login": "kanta1207"
                        },
                        "body": "<!--\r\n\r\nTitle Naming Conventions:\r\n\r\n- Start with a capitalized prefix followed by an imperative form of a verb, just like a commit message.\r\n- Refer to the \"Commit Convention\" for the prefix:\r\n  https://github.com/genesis-tech-tribe/nishiki-frontend/blob/develop/docs/CONTRIBUTING.md#commit-convention.\r\n\r\nExample:\r\n- Fix: Resolve memory leak in data processing module\r\n- Feat: Add two-factor authentication\r\n- Refactor: Improve state management in React components\r\n- Docs: Add Windows setup instructions\r\n\r\n-->\r\n\r\n## Overview\r\n\r\n<!-- Provide a brief description of the changes introduced by this PR. -->\r\nCreate Checkbox component based on shadcn [Checkbox](https://ui.shadcn.com/docs/components/checkbox)\r\n\r\n## Changes\r\n\r\n<!-- List the changes -->\r\n<!-- Delete this section if not needed -->\r\n\r\n- Added `Checkbox.tsx` to `src/components/ui` directory.\r\n- Added `CheckboxUsageExample.tsx`\r\n- Added export of `Checkbox` in `src/components/ui/index.ts` \r\n- Added `icon_check.svg` to `assets/images/icons`\r\n- Added color `white` to Icon component variant\r\n\r\n## Review points\r\n\r\n<!-- List the points you would like to be reviewed in detail and the points you are not confident about. -->\r\n<!-- Delete this section if not needed -->\r\n\r\n- Since there weren't any size variation, I didn't add variants for checkbox, so checkbox rectangle is fixed to be 24px square, and check icon is fixed to be 14px. We can override it any time with `className` tho. **Should I make size variant already, considering the desktop design?**\r\n   \r\n\r\n## Screen Captures\r\n\r\n<!-- Add screenshots or screen recordings of the changes -->\r\n<!-- Necessary for UI changes -->\r\n<!-- Delete this section if not needed -->\r\n\r\n\r\nhttps://github.com/genesis-tech-tribe/nishiki-frontend/assets/99339182/31220b71-7c09-4270-8b37-13f8834e5fdb\r\n\r\n\r\n\r\n## References\r\n\r\n<!-- List all the URLs of the references (documents, articles, youtube videos, etc.) that you used to complete this task -->\r\n<!-- If you have referred to responses from ChatGPT or other AIs, please include the links to the conversations if possible -->\r\n<!-- Delete this section if not needed -->\r\n\r\n- [shadcn Checkbox component](https://ui.shadcn.com/docs/components/checkbox)\r\n\r\n\r\n## Assignee Checklist:\r\n\r\n<!-- You can tick the checkboxes if not applicable -->\r\n\r\n- [ ] The naming convention of the PR title is correct (See the comment at the top of this template)\r\n- [ ] The base branch is correct (See: [Types of Branches](https://github.com/genesis-tech-tribe/nishiki-frontend/blob/develop/docs/CONTRIBUTING.md#types-of-branches))\r\n- [ ] The branch name follows the [Branch Naming Conventions](https://github.com/genesis-tech-tribe/nishiki-frontend/blob/develop/docs/CONTRIBUTING.md#branch-naming-conventions)\r\n- [ ] The correct assignees and reviewers have been designated for this PR\r\n- [ ] The coding style follows the [Coding Style Guide](https://github.com/genesis-tech-tribe/nishiki-frontend/blob/develop/docs/STYLEGUIDE.md)\r\n- [ ] All the related issues are associated with this PR\r\n- [ ] All criteria in the associated issues are met (please tick the checkboxes)\r\n- [ ] My changes do not generate new warnings or errors (especially in the console)\r\n\r\n## Reviewer Checklist:\r\n\r\n<!-- You can tick the checkboxes if not applicable -->\r\n\r\n- [ ] Double-check the \"Assignee Checklist\"\r\n- [ ] The code follows the generic best practices and our [Coding Style Guide](https://github.com/genesis-tech-tribe/nishiki-frontend/blob/develop/docs/STYLEGUIDE.md)\r\n- [ ] The code is well-commented and easy to understand\r\n- [ ] The UI changes accurately reflect the provided design\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "There is no point from me to mention. Thanks!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "@kanta1207\nThank you for your work! I left some comments. Please kindly take a look at them.\nAlso could you tick the checklist, please? So we will be able to double-check them.\nFor your question,\n\nShould I make size variant already, considering the desktop design?\n\nI don't think you should define variants for the size, until it becomes necessary.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This <div> should be the <Label> tag, so that the entire card can toggle the checkbox.",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I recommend against defining styles not in the provided design. Disabled checkboxes typically have different styles, such as a grayish color.",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Does the color primary-foregroud exist?",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Does this peer have any effects?\nhttps://tailwindcss.com/docs/hover-focus-and-other-states#styling-based-on-sibling-state",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The current border width looks a bit too thin to me.\nI played around and figured out border-[1.2px] and border-[1.5px] looked nicer.\nIn fact, the border width of the original svg image in Figma is around 1.2px.\n1px:\n\n1.2px (this is the closest value to the original design):\n\n1.5px:\n\nI personally prefer 1.5px, but if you stick to the Figma design, around 1.2px would be the best.",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I thought we might be able to utilize it, but now I feel like we can remove it!!\nIt doesn't have any effect itself, it can have some effect when checkbox component is used with other sibling element. But anyway we can pass peerclass anytime to CheckboxRoot only when it's needed.\nI removed it in the latest commit!",
                                                        "author": {
                                                            "login": "kanta1207"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It was complete mistake of mine, sorry!\nI removed it!",
                                                        "author": {
                                                            "login": "kanta1207"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Do you think it's better to add some typical style for disabled state?\nSince it's currently not designed in wire frame, I removed disabled:cursor-not-allowed in the latest commit!",
                                                        "author": {
                                                            "login": "kanta1207"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thank you for pointing out!! I was a bit blind about it, sorry \ud83d\ude13\nI didn't have much preference between 1.2px and 1.5px , so I decided to follow the figma, 1.2px!\nThus I set it as 0.075rem since we're using rem in our code base",
                                                        "author": {
                                                            "login": "kanta1207"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thank you for updating!\nIn general, disabled checkboxes are usually styled in a design. However, since our current features do not require disabled checkboxes, I suppose there is no need to define a style for them for now. When adding a new style to our code, it would be the time to ask the designers to add a new design to Figma.",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Using rem for such small values may not be effective... I have never seen that before.\nI asked ChatGPT, and here is the conversation:\nhttps://chat.openai.com/share/a85682c7-e98b-4ab9-9f84-a0a0edc9d88d\nCould you research more about it, please?",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Use px when you need fixed-size elements that won't change, such as for borders or shadows.\nYour suggestion and also this article below make sense. I think I'm going to use px for this\nhttps://www.shecodes.io/athena/28078-when-to-use-ems-rems-and-px-in-css#:~:text=Use%20px%20when%20you%20need,their%20browser's%20default%20font%20size.\nOther references:\nhttps://stackoverflow.com/questions/33997943/0-1-rem-border-width-renders-differently-on-chrome-and-safari\nhttps://kheohyeewei.medium.com/in-short-when-to-use-px-em-and-rem-b2de94e1b829",
                                                        "author": {
                                                            "login": "kanta1207"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I see that it still remains \ud83d\udc40",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@kanta1207\nI understand that you have made an update, but it's not what I intended.\nFirst, we should always avoid using the plain <label> tag everywhere, since we have defined the <Label> component.\nSecondly, what I originally meant was to substitute the previously specified <div> with a <Label> tag, which should have its htmlFor attribute referencing the id of the checkbox. Also, the existing <Label> tag needs to be replaced with a normal <div>, <p> or something else.",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thank you for updating and providing additional information :)",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You mean peer on line 28 remains? I suppose it's removed in this commit, and I couldn't find it in the current branch",
                                                        "author": {
                                                            "login": "kanta1207"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sorry, I overlooked it... I suppose keeping it is acceptable if it's intentional, but thanks for updating!",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Addressed in this PR: #191",
                                                        "author": {
                                                            "login": "nick-y-ito"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a8cb55a",
                                                            "authoredDate": "2024-01-13T07:25:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 252,
                        "title": "Add model for iCubGenova11",
                        "repository": {
                            "nameWithOwner": "robotology/icub-models-generator",
                            "primaryLanguage": {
                                "name": "C++"
                            }
                        },
                        "createdAt": "2024-01-09T13:14:50Z",
                        "mergedAt": "2024-01-11T09:14:15Z",
                        "url": "https://github.com/robotology/icub-models-generator/pull/252",
                        "state": "MERGED",
                        "author": {
                            "login": "traversaro"
                        },
                        "editor": {
                            "login": "traversaro"
                        },
                        "body": "The `iCubGenova11` is an iCub 2.7, so we generated the model accordingly.\r\n\r\nIt also fixes https://github.com/robotology/icub-models-generator/issues/255 to ensure that CI is green. I manually run the CI to push the generated files in https://github.com/robotology/icub-models/tree/addicubgenova11 for testing @martinaxgloria .",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2394,
                        "title": "Add support for `CollapsedDocStrings` in `@meta` block",
                        "repository": {
                            "nameWithOwner": "JuliaDocs/Documenter.jl",
                            "primaryLanguage": {
                                "name": "Julia"
                            }
                        },
                        "createdAt": "2024-01-08T03:51:58Z",
                        "mergedAt": "2024-02-04T23:41:31Z",
                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394",
                        "state": "MERGED",
                        "author": {
                            "login": "goerz"
                        },
                        "editor": null,
                        "body": "Setting `DocStringsCollapsed = true` in the `@meta` block of a particular page essentially clicks the \"Collapse all docstrings\" in the navigation bar after the page loads, collapsing all docstrings on that page.\r\n\r\nI think the approach of just having JavaScript click the collapse button is the right one here: First, I'm not sure that it would be possible to write out the page in a collapsed state, or at least not without doing some pretty gnarly rewrites of the `HTMLWriter`. More importantly, rendering the page expanded and then collapsing it with JavaScript seems like the right thing to do from an accessibility standpoint: We'd want the page to still be useful without JavaScript. I've been known to access API documentation in the terminal with `w3m`, so not relying on JavaScript to render the core content is something I actually care about. Screenreaders probably also wouldn't like if all docstrings initially rendered as `hidden`.\r\n\r\nCloses #2282",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I feel that ideally we'd do this by statically generating the necessary HTML. It looks like we use display: none on the section tags.. and then update some other stuff. Ideally, we'd have a class on the article tag that toggles everything.\nHow much effort would you be willing to put into this? I didn't test this yet, but I assume that this works, and we can merge this as is, and refactor later as well.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "More importantly, rendering the page expanded and then collapsing it with JavaScript seems like the right thing to do from an accessibility standpoint: We'd want the page to still be useful without JavaScript.\n\nAh.. that is a fair point actually. We should indeed make sure that it loads uncollapsed if you don't have JS enabled. So now I'm coming around to this approach.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Right. I'd still advocate for going with the approach in this PR. I started out with trying to write out the collapsed HTML if the option is set until I realized that:\n(a) It's much more difficult to implement that way. In fact, I'm not sure that I'd be able to do it in any reasonable amount of time.\n(b) \"Collapsed\" means display: none, which removes the content entirely without JS, which seems like a bad idea.\nThe test in the PR only checks for the presence of the injected JS. I don't think there's much I can do beyond that. I did test locally that the JS does what it's supposed to (very nicely, in fact). What I could do as an additional test is to use the feature in the Documenter documentation. Maybe collapsing all the Internal API pages by default?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, let's go with the JS approach.\nIt currently does have the problem that you can see all the docstrings collapsing when you navigate to the page though. Maybe @Hetarth02 has some ideas how to work around that.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Interesting, I will definitely take a look into this.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@Hetarth02 I'd appreciate that! You might be better at JS than me. I'm having real trouble getting it to load correctly. In my first iteration, it worked fine locally but only 90% of the time in Chrome and only 1% of the time in Safari. I'm guessing the script was running too early. In the current iteration, I've tried to move the <script> tag to the end of the file, but that's still behaving the same way (i.e., not working in Safari). I also tried putting it in an external script (I think local scripts load before external scripts, which may be part of the problem), but that was much more complicated to implement, and then just didn't work at all. I can push that branch again somewhere if you'd like to take a look at it.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It currently does have the problem that you can see all the docstrings collapsing when you navigate to the page though\n\nYeah, I can't decide whether it's a problem or whether I actually kinda like it. But in any case, I think jQuery is handling the collapse animation. Maybe there's a way to temporarily disable the animation or at least speed it up?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, Jquery handles the animation and there is a way to speed it up.\nI also think that, initially appearing as open then getting closed is okay.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can push that branch again\n\nPushed to https://github.com/JuliaDocs/Documenter.jl/tree/mg/meta-docstrings-collapsed2. This one doesn't work at all, though, and I'm not sure why.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm somewhat out of my depth when it comes to JS. Does anything from the discussion I had with ChatGPT seem useful here? https://chat.openai.com/share/a5c0b599-79f0-46e5-9840-74984896d398\nThe suggestion\n\nModify documenter.js to dispatch a custom event when it has fully loaded and executed. Then, in your script at the end of the page, add an event listener for this custom event before executing your code.\n\ndoesn't sound entirely implausible.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Which branch should I check from?\nmg/meta-docstrings-collapsed2 or mg/meta-docstrings-collapsed",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Preferably, mg/meta-docstrings-collapsed. The other one was an attempt to put the JS in a separate script file. It was both more complicated and didn't actually work, but I just wanted to keep the branch around in case mg/meta-docstrings-collapsed doesn't work out and I need to get back to it.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "mg/meta-docstrings-collapsed works perfectly when looking at documentation locally with LiveServer, but doesn't work reliably when looking at the online documentation, e.g. at https://documenter.juliadocs.org/previews/PR2394/lib/internals/anchors/. In Chrome, it works most of the time, in Safari, it does not work most of the time. Presumably, the issue is the asynchronous execution of JS and the code that clicks the collapse button firing too early.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz So, I fiddled around a bit. I have found a way which I think will work.\nBasically, what we will do is save all the @meta flags in data attribute of a div element. Something like below,\n<div data-docstringscollapsed=\"true\"></div>\nThen add a js script, which will perform the necessary actions for each flags. For example, like this\n// assets/html/js/metadata.js\n\n// libraries: jquery\n// arguments: $\n\nlet docstringscollapsed = $(\"div[data-docstringscollapsed]\").data();\n\nif (docstringscollapsed) {\n  $(\"#documenter-article-toggle-button\").click();\n}\nDoing this will always ensure that, all the scripts and DOM content will be loaded. Hence, it might mitigate what we are currently facing.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "That sounds good! Do you want to just push to the mg/meta-docstrings-collapsed branch? I'm assuming you have permissions \u2013 or make a new branch, if you prefer.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think I have the necessary permissions to do so.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can merge from https://github.com/Hetarth02/Documenter.jl/ into my PR then. Let me know which branch.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Alright, will do so. Let me iron some things out and will ping you when I am done.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Sorry for the delay, I have pushed the changes to Draft-PR-2394. Also, made an PR to this branch.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No worries! Thanks for taking a look! I'll check it out.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Just FYI, this is just a rudimentary implementation from my side. There is of course room for improvement in logic.\ud83d\ude05",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It works perfectly! Thanks for coming up with the approach that makes this reliable!",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This seems fine to me. It still shows the close-animation after the page is loaded. I don't mind it that much, but @mortenpi might still prefer if we speed it up.\n@Hetarth02 Do you know what to add to control the animation speed?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Seems a little unrelated to the PR, but I just kept it in",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Marked as \"experimental\" so we can still change this even after the PR is merged/released. For example, #2394 (comment)",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c43682",
                                                            "authoredDate": "2024-01-23T20:55:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I figured it out: e5b84d3\nThe currently deployed preview documentation disables the animation completely. Better? I'm okay with either.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This whole thing probably needs to be in a $(document).ready(function () { ... }?",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6cff39e",
                                                            "authoredDate": "2024-01-24T02:53:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Let's try it! https://documenter.juliadocs.org/previews/PR2394/ should now have that change. Of course, all I can say is that it continues to work for me, so you'll have to let us know :-)",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6cff39e",
                                                            "authoredDate": "2024-01-24T02:53:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Eh, yea, let's just keep it on the top-level. Doing namespacing adds other kinds of complexity. Some of these options will just be ignored by some backends.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            - `DocStringsCollapsed`: if `true`, collapse all docstrings after loading the page (experimental).\n          \n          \n            \n            - `DocStringsCollapsed`: for output formats that support this (i.e. only [`HTML`](@ref Documenter.HTML) currently), if set to `true`, render all docstrings as collapsed by default.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c43682",
                                                            "authoredDate": "2024-01-23T20:55:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "@goerz I took the liberty of pushing a DocStringsCollapsed -> CollapsedDocString bikeshed. Happy to revert it if you prefer DocStringsCollapsed. From my side, I'm happy if we merge this!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjE3",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 17
        }
    }
}